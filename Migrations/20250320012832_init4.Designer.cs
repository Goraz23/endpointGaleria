// <auto-generated />
using System;
using Library.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250320012832_init4")]
    partial class init4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Domain.Author", b =>
                {
                    b.Property<int>("PkAuthor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkAuthor"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkAuthor");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Library.Models.Domain.Categoria", b =>
                {
                    b.Property<int>("PkCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkCategoria"));

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Library.Models.Domain.Fotografia", b =>
                {
                    b.Property<int>("PkFotografia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkFotografia"));

                    b.Property<int?>("AuthorPkAuthor")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaPkCategoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkAuthor")
                        .HasColumnType("int");

                    b.Property<int>("FkCategoria")
                        .HasColumnType("int");

                    b.Property<int>("FkGaleria")
                        .HasColumnType("int");

                    b.Property<int?>("GaleriaPkGaleria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkFotografia");

                    b.HasIndex("AuthorPkAuthor");

                    b.HasIndex("CategoriaPkCategoria");

                    b.HasIndex("GaleriaPkGaleria");

                    b.ToTable("Fotografia");
                });

            modelBuilder.Entity("Library.Models.Domain.Galeria", b =>
                {
                    b.Property<int>("PkGaleria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkGaleria"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreGaleria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PkGaleria");

                    b.ToTable("Galeria");
                });

            modelBuilder.Entity("Library.Models.Domain.Fotografia", b =>
                {
                    b.HasOne("Library.Models.Domain.Author", "Author")
                        .WithMany("Fotografias")
                        .HasForeignKey("AuthorPkAuthor");

                    b.HasOne("Library.Models.Domain.Categoria", "Categoria")
                        .WithMany("Fotografias")
                        .HasForeignKey("CategoriaPkCategoria");

                    b.HasOne("Library.Models.Domain.Galeria", "Galeria")
                        .WithMany()
                        .HasForeignKey("GaleriaPkGaleria");

                    b.Navigation("Author");

                    b.Navigation("Categoria");

                    b.Navigation("Galeria");
                });

            modelBuilder.Entity("Library.Models.Domain.Author", b =>
                {
                    b.Navigation("Fotografias");
                });

            modelBuilder.Entity("Library.Models.Domain.Categoria", b =>
                {
                    b.Navigation("Fotografias");
                });
#pragma warning restore 612, 618
        }
    }
}
